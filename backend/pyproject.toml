[tool.ruff]
# Exclude directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable ALL available rules for maximum strictness
select = ["ALL"]

# Ignore specific rules that might be too restrictive for this project
ignore = [
    # Allow print statements (useful for debugging)
    "T20",
    # Allow TODO comments  
    "FIX002",
    # Allow relative imports within package
    "TID252",
    # Allow magic value comparisons (common in web APIs)
    "PLR2004",
    # Allow too many arguments (FastAPI endpoints often have many parameters)
    "PLR0913",
    # Allow too many branches (sometimes necessary for complex logic)
    "PLR0912",
    # Allow try-except-pass (sometimes needed for optional dependencies)
    "S110",
    # Allow subprocess usage (needed for code execution)
    "S603", "S607",
    # Allow use of assert (useful in tests and development)
    "S101",
]

# Allow fix for all fixable rules
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# Tests can use more relaxed rules
"tests/*" = [
    "PLR2004",  # Magic value used in comparison
    "S101",     # Use of assert
    "ARG",      # Unused function args in tests
    "FBT",      # Don't care about booleans as positional arguments in tests
    "PLR0913",  # Too many arguments to function call
    "S311",     # Standard pseudo-random generators are not suitable for security/cryptographic purposes
]

# Migration files can be more relaxed
"*/migrations/*" = [
    "N806",     # Variable name should be lowercase
]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Use spaces around slice colons
indent-style = "space"

# Respect magic trailing commas
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending
line-ending = "auto"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-import-conventions]
aliases = {}
banned-aliases = {}

[tool.ruff.lint.isort]
case-sensitive = false
combine-as-imports = true
force-single-line = false
force-sort-within-sections = false
known-first-party = ["app"]
lines-after-imports = 2
order-by-type = true
relative-imports-order = "closest-to-furthest"
required-imports = []
single-line-exclusions = []
split-on-trailing-comma = true

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = []
runtime-evaluated-decorators = []
strict = true

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 15
max-returns = 8
max-statements = 60

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "tuple"
parametrize-values-row-type = "tuple"
parametrize-values-type = "list"

[tool.ruff.lint.flake8-bandit]
hardcoded-tmp-directory = ["/tmp", "/var/tmp", "/dev/shm"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = []

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
# Strictest possible MyPy configuration
python_version = "3.9"
platform = "linux"

# Import discovery
mypy_path = "."
packages = ["app"]
namespace_packages = true
explicit_package_bases = true

# Disallow dynamic typing
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_subclassing_any = true

# Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# None and Optional handling
no_implicit_optional = true
strict_optional = true

# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

# Miscellaneous strictness flags
strict_equality = true
extra_checks = true
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = false
ignore_missing_imports = false

# Configuring error messages
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
color_output = true
error_summary = true
show_absolute_path = true

# Incremental mode
incremental = true
sqlite_cache = true
cache_dir = ".mypy_cache"
skip_version_check = false
skip_cache_mtime_checks = false

# Advanced options
always_false = []
always_true = []

# Per-module options for external dependencies that might not have types
[[tool.mypy.overrides]]
module = [
    "uvicorn.*",
    "psutil.*",
    "subprocess32.*",
    "docker.*",
]
ignore_missing_imports = true
disallow_any_unimported = false

# Slightly relaxed rules for test files
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_any_expr = false
disallow_any_explicit = false